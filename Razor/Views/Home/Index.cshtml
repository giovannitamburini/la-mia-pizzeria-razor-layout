@{
    ViewData["Title"] = "Home Page";
}

@* esercizio 1 *@
<div>
    <div>
        1. Dichiarare una variabile valorizzandola con il nostro nome.
        Dichiarare un'altra variabile valorizzandola con il nostro cognome.
        Stampare il nostro nome e cognome all'interno di un tag h2.
    </div>

    @{
        string myName = "Giovanni";
        string mySurname = "Tamburini";
    }

    <h2>@myName @mySurname</h2>

</div>

<hr />

@* esercizio 2 *@
<div>
    <div>
        2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
        Stampare dentro uno span il risultato.
    </div>

    @{
        int SumNumbersFromOneToN(int n)
        {
            int sum = 0;

            for (int i = 1; i <= n; i++)
            {
                sum += i;
            }

            return sum;
        }
    }

    <span>La somma dei numeri che vanno da 1 a 5 è: @SumNumbersFromOneToN(5)</span>

</div>

<hr />

@* esercizio 3 *@
<div>
    <div>3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina</div>

    @{
        string paragraph = "nel mezzo del cammin di nostra vita";

        int CountCharInParagraph(char c, string paragraph)
        {
            return paragraph.Count(n => n == c);
        }
    }

    <div>La lettera n è presente @CountCharInParagraph('n', paragraph) volte nella frase indicata</div>

</div>

<hr />

@* esercizio 4 *@
<div>
    <div>4. Creare una List<int>(int) di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70</div>

    @{
        List<int> twentyRandomNumbers = new List<int>();
        Random random = new Random();

        for (int i = 0; i < 20; i++)
        {
            int numRandom = random.Next(1, 91);

            twentyRandomNumbers.Add(numRandom);
        }
    }

    @foreach (int num in twentyRandomNumbers)
    {
        @if (num >= 20 && num <= 70)
        {
            <span>@num</span>
        }
    }
</div>

<hr/>

@* esercizio 5 *@
<div>
    <div>5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi</div>

    @{
        DateTime currentDateAndTime = DateTime.Now;

    }

    <div>Data e orario attuale: @currentDateAndTime.ToString("yyyy-MM-dd HH:mm:ss")</div>

</div>

<hr />

@* esercizio 6 *@
<div>
    <div>6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina:</div>
    <ol>
        <li>la data di 7 giorni fa</li>
        <li>che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</li>
        <li>che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</li>
    </ol>

    @{
        DateTime currentDate = DateTime.Now;

    }
    <h6>Soluzioni:</h6>
    <ol>
        <li>La data di 7 giorni fa: @currentDate.AddDays(-7).ToString("dd/MM/yyyy")</li>
        <li>@currentDate.ToString("dddd")</li>
        <li>@currentDate.AddYears(1).ToString("dddd")</li>
    </ol>
</div>